<!-- Enhanced Modal Alert System -->
<div id="customModal" class="fixed inset-0 bg-black bg-opacity-60 overflow-y-auto h-full w-full hidden z-50 backdrop-blur-sm">
    <div class="relative top-20 mx-auto p-0 border-0 w-96 shadow-2xl rounded-2xl bg-white transform transition-all duration-300 ease-out scale-95 opacity-0" id="modalContainer">
        <!-- Modal Header with Gradient -->
        <div class="bg-gradient-to-r from-indigo-500 to-purple-600 rounded-t-2xl p-6 text-white">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <div id="modalIcon" class="flex-shrink-0 mr-4">
                        <!-- Icon will be inserted here -->
                    </div>
                    <h3 id="modalTitle" class="text-xl font-bold">
                        <!-- Title will be inserted here -->
                    </h3>
                </div>
                <button onclick="closeCustomModal()" class="text-white hover:text-gray-200 transition-colors duration-200 p-2 rounded-full hover:bg-white hover:bg-opacity-20">
                    <i class="fas fa-times text-lg"></i>
                </button>
            </div>
        </div>
        
        <!-- Modal Body -->
        <div class="p-6">
            <div class="mb-6">
                <p id="modalMessage" class="text-gray-700 text-base leading-relaxed">
                    <!-- Message will be inserted here -->
                </p>
            </div>
            
            <!-- Modal Actions -->
            <div class="flex justify-end space-x-3">
                <button id="modalCancelBtn" onclick="closeCustomModal()" class="px-6 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-300 transition-all duration-200 font-medium hidden">
                    Cancel
                </button>
                <button id="modalConfirmBtn" onclick="confirmCustomModal()" class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-xl hover:from-indigo-600 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-indigo-300 transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:scale-105 hidden">
                    Confirm
                </button>
                <button id="modalOkBtn" onclick="closeCustomModal()" class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-xl hover:from-indigo-600 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-indigo-300 transition-all duration-200 font-medium shadow-lg hover:shadow-xl transform hover:scale-105">
                    OK
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // Modal System
    let customModalCallback = null;

    function showSuccessModal(message, title = 'Success') {
        showCustomModal('success', title, message);
    }

    function showErrorModal(message, title = 'Error') {
        showCustomModal('error', title, message);
    }

    function showWarningModal(message, title = 'Warning') {
        showCustomModal('warning', title, message);
    }

    function showInfoModal(message, title = 'Information') {
        showCustomModal('info', title, message);
    }

    function showConfirmModal(message, title = 'Confirm', callback = null) {
        showCustomModal('confirm', title, message, callback);
    }

    function showCustomModal(type, title, message, callback = null) {
        const modal = document.getElementById('customModal');
        const modalContainer = document.getElementById('modalContainer');
        const modalIcon = document.getElementById('modalIcon');
        const modalTitle = document.getElementById('modalTitle');
        const modalMessage = document.getElementById('modalMessage');
        const modalCancelBtn = document.getElementById('modalCancelBtn');
        const modalConfirmBtn = document.getElementById('modalConfirmBtn');
        const modalOkBtn = document.getElementById('modalOkBtn');

        // Set title and message
        modalTitle.textContent = title;
        modalMessage.textContent = message;

        // Set icon and colors based on type
        let iconHtml = '';
        let headerGradient = '';
        let confirmBtnClass = '';
        
        switch(type) {
            case 'success':
                iconHtml = '<i class="fas fa-check-circle text-white text-3xl"></i>';
                headerGradient = 'bg-gradient-to-r from-emerald-500 to-green-600';
                confirmBtnClass = 'bg-gradient-to-r from-emerald-500 to-green-600 hover:from-emerald-600 hover:to-green-700';
                break;
            case 'error':
                iconHtml = '<i class="fas fa-exclamation-circle text-white text-3xl"></i>';
                headerGradient = 'bg-gradient-to-r from-red-500 to-pink-600';
                confirmBtnClass = 'bg-gradient-to-r from-red-500 to-pink-600 hover:from-red-600 hover:to-pink-700';
                break;
            case 'warning':
                iconHtml = '<i class="fas fa-exclamation-triangle text-white text-3xl"></i>';
                headerGradient = 'bg-gradient-to-r from-yellow-500 to-orange-500';
                confirmBtnClass = 'bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600';
                break;
            case 'info':
                iconHtml = '<i class="fas fa-info-circle text-white text-3xl"></i>';
                headerGradient = 'bg-gradient-to-r from-blue-500 to-indigo-600';
                confirmBtnClass = 'bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700';
                break;
            case 'confirm':
                iconHtml = '<i class="fas fa-question-circle text-white text-3xl"></i>';
                headerGradient = 'bg-gradient-to-r from-indigo-500 to-purple-600';
                confirmBtnClass = 'bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700';
                break;
        }

        // Update header gradient
        const header = modalContainer.querySelector('.bg-gradient-to-r');
        if (header) {
            header.className = header.className.replace(/bg-gradient-to-r from-\w+-\d+ to-\w+-\d+/, headerGradient);
        }

        modalIcon.innerHTML = iconHtml;

        // Show/hide buttons based on type
        if (type === 'confirm') {
            modalCancelBtn.classList.remove('hidden');
            modalConfirmBtn.classList.remove('hidden');
            modalOkBtn.classList.add('hidden');
            modalConfirmBtn.className = `px-6 py-3 ${confirmBtnClass} text-white rounded-xl hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-indigo-300 transition-all duration-200 font-medium shadow-lg transform hover:scale-105`;
            customModalCallback = callback;
        } else {
            modalCancelBtn.classList.add('hidden');
            modalConfirmBtn.classList.add('hidden');
            modalOkBtn.classList.remove('hidden');
            modalOkBtn.className = `px-6 py-3 ${confirmBtnClass} text-white rounded-xl hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-indigo-300 transition-all duration-200 font-medium shadow-lg transform hover:scale-105`;
            customModalCallback = null;
        }

        // Show modal with animation
        modal.classList.remove('hidden');
        
        // Trigger animation
        setTimeout(() => {
            modalContainer.classList.remove('scale-95', 'opacity-0');
            modalContainer.classList.add('scale-100', 'opacity-100');
        }, 10);
    }

    function closeCustomModal() {
        const modal = document.getElementById('customModal');
        const modalContainer = document.getElementById('modalContainer');
        
        // Trigger closing animation
        modalContainer.classList.remove('scale-100', 'opacity-100');
        modalContainer.classList.add('scale-95', 'opacity-0');
        
        // Hide modal after animation
        setTimeout(() => {
            modal.classList.add('hidden');
        }, 300);
        
        customModalCallback = null;
    }

    function confirmCustomModal() {
        if (customModalCallback) {
            customModalCallback();
        }
        closeCustomModal();
    }

    // Close modal when clicking outside
    document.getElementById('customModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeCustomModal();
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeCustomModal();
        }
    });
</script>
