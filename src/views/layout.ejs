<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - ArchivArt</title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/favicon.png">
    <link rel="shortcut icon" type="image/png" href="/favicon.png">
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/style.css">
    
    <style>
        /* Toaster Styles */
        .toaster {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            max-width: 400px;
            min-width: 300px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            border-left: 4px solid #10b981;
            transform: translateX(100%);
            opacity: 0;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .toaster.show {
            transform: translateX(0);
            opacity: 1;
        }
        
        .toaster.error {
            border-left-color: #ef4444;
        }
        
        .toaster.warning {
            border-left-color: #f59e0b;
        }
        
        .toaster-content {
            padding: 16px 20px;
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .toaster-icon {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }
        
        .toaster-icon.success {
            background: #d1fae5;
            color: #10b981;
        }
        
        .toaster-icon.error {
            background: #fee2e2;
            color: #ef4444;
        }
        
        .toaster-icon.warning {
            background: #fef3c7;
            color: #f59e0b;
        }
        
        .toaster-message {
            flex: 1;
        }
        
        .toaster-title {
            font-weight: 600;
            font-size: 14px;
            color: #111827;
            margin: 0 0 4px 0;
        }
        
        .toaster-description {
            font-size: 13px;
            color: #6b7280;
            margin: 0;
        }
        
        .toaster-close {
            background: none;
            border: none;
            color: #9ca3af;
            cursor: pointer;
            padding: 4px;
            border-radius: 4px;
            transition: all 0.2s;
        }
        
        .toaster-close:hover {
            background: #f3f4f6;
            color: #6b7280;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Flash Messages (Hidden - converted to toasters) -->
    <% if (success_msg && success_msg.length > 0) { %>
        <div class="hidden" id="success-flash-message">
            <%= success_msg %>
        </div>
    <% } %>
    
    <% if (error_msg && error_msg.length > 0) { %>
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
            <i class="fas fa-exclamation-circle mr-2"></i>
            <%= error_msg %>
        </div>
    <% } %>

    <!-- Page Content -->
    <%- body %>
    
    <!-- Toaster Container -->
    <div id="toaster-container"></div>
    
    <script>
        // Toaster functionality
        class Toaster {
            constructor() {
                this.container = document.getElementById('toaster-container');
            }

            show(message, type = 'success', duration = 4000) {
                const toaster = document.createElement('div');
                toaster.className = `toaster ${type}`;
                
                const iconMap = {
                    success: 'fas fa-check',
                    error: 'fas fa-times',
                    warning: 'fas fa-exclamation-triangle'
                };

                toaster.innerHTML = `
                    <div class="toaster-content">
                        <div class="toaster-icon ${type}">
                            <i class="${iconMap[type]}"></i>
                        </div>
                        <div class="toaster-message">
                            <div class="toaster-title">${message.title || 'Notification'}</div>
                            <div class="toaster-description">${message.description || ''}</div>
                        </div>
                        <button class="toaster-close" onclick="this.parentElement.parentElement.remove()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;

                this.container.appendChild(toaster);

                // Trigger animation
                setTimeout(() => {
                    toaster.classList.add('show');
                }, 100);

                // Auto remove
                if (duration > 0) {
                    setTimeout(() => {
                        this.hide(toaster);
                    }, duration);
                }

                return toaster;
            }

            hide(toaster) {
                toaster.classList.remove('show');
                setTimeout(() => {
                    if (toaster.parentNode) {
                        toaster.parentNode.removeChild(toaster);
                    }
                }, 300);
            }

            success(message, duration = 4000) {
                return this.show(message, 'success', duration);
            }

            error(message, duration = 6000) {
                return this.show(message, 'error', duration);
            }

            warning(message, duration = 5000) {
                return this.show(message, 'warning', duration);
            }
        }

        // Initialize toaster
        const toaster = new Toaster();

        // Handle hidden success messages (converted to toasters)
        document.addEventListener('DOMContentLoaded', function() {
            const successFlashMessage = document.getElementById('success-flash-message');
            if (successFlashMessage) {
                const messageText = successFlashMessage.textContent.trim();
                if (messageText && typeof showSuccessToast === 'function') {
                    showSuccessToast(messageText);
                    successFlashMessage.remove();
                }
            }
        });
    </script>
</body>
</html>
