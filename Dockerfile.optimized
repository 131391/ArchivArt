# Optimized Dockerfile for ArchivArt
# Multi-stage build for better performance and smaller image size

# Stage 1: Node.js dependencies
FROM node:18-alpine AS node-builder

WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Stage 2: Python dependencies
FROM python:3.9-slim AS python-builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gnupg \
    build-essential \
    libopencv-dev \
    python3-opencv \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Python service and install dependencies
COPY python-service/ ./python-service/
RUN pip install --no-cache-dir -r python-service/requirements.txt

# Stage 3: Final production image
FROM python:3.9-slim

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    libopencv-dev \
    python3-opencv \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js runtime
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy built dependencies from previous stages
COPY --from=node-builder /app/node_modules ./node_modules
COPY --from=python-builder /app/python-service ./python-service

# Copy application code
COPY package*.json ./
COPY src/ ./src/
COPY *.js ./

# Create uploads directory
RUN mkdir -p src/public/uploads/media src/public/uploads/logos

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# Expose ports
EXPOSE 3000 5001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Start both services
COPY start-both.sh ./
RUN chmod +x start-both.sh

CMD ["./start-both.sh"]
